1.Create Table

a.Write a SQL statement to create a table named jobs including columns job_id,
 job_title, min_salary, max_salary and check whether the max_salary should  be greater than  8000.

mysql> create table jobs(job_id int primary key,job_title varchar(20),min_salary int (20),max_salary int (10),check (max_salary >8000));
Query OK, 0 rows affected, 2 warnings (0.04 sec)

mysql> desc jobs;
+------------+-------------+------+-----+---------+-------+
| Field            | Type         | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| job_id         | int             | NO   | PRI | NULL    |       |
| job_title  |   varchar(20) | YES  |       | NULL    |       |
| min_salary | int              | YES  |      | NULL    |       |
| max_salary | int             | YES  |      | NULL    |       |
+------------+-------------+------+-----+---------+-------+


b. Write a SQL statement to create a table named countries including columns country_id, 
country_name and region_id and make sure that no countries except Italy, India and China 
will be entered in the table.


mysql> CREATE TABLE IF NOT EXISTS countries(COUNTRY_ID varchar(2),COUNTRY_NAME varchar(30)CHECK(COUNTRY_NAME IN('Italy','India','China')),REGION_ID decimal(10,0));
Query OK, 0 rows affected (0.04 sec)

mysql> desc countries;
+--------------+---------------+------+-----+---------+-------+
| Field                     | Type            | Null  | Key   | Default | Extra |
+--------------+---------------+------+-----+---------+-------+
| COUNTRY_ID       | varchar(2)     | YES  |       | NULL    |         |
| COUNTRY_NAME | varchar(30)   | YES  |      | NULL     |         |
| REGION_ID           | decimal(10,0) | YES  |      | NULL     |         |



c.Write a SQL statement to create a table job_history including columns employee_id, start_date, end_date,
 job_id and department_id and make sure that, the employee_id column does not contain any duplicate value 
at the time of insertion.

 CREATE TABLE JOB_HISTORY (EMPLOYEE_ID VARCHAR(20) CS, START_DATE DATE, END_DATE DATE, JOB_ID  VARCHAR (15), DEPARTMENT_ID VARCHAR (20));
mysql> DESC JOB_HISTORY;
+---------------+-------------+------+-----+---------+-------+
| Field                    | Type                   | Null       | Key         | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| EMPLOYEE_ID   | varchar(20)    | YES              | CS           | NULL    |       |
| START_DATE    | date                | YES              |                | NULL    |       |
| END_DATE        | date                  | YES            |                | NULL    |       |
| JOB_ID        | varchar(15)          | YES              |                | NULL    |       |
| DEPARTMENT_ID | varchar(20) | YES              |                | NULL    |       |
+---------------+-------------+------+-----+---------+-------+

2.Alter Table

a.Write a SQL statement to add a foreign key constraint named fk_job_id on job_id column of 
job_history table referencing to the primary key job_id of jobs table.

--> 







b.Write a SQL statement to rename the table countries to country_new.
--> alter table countries rename to new_countries;

mysql> desc new_countries;
+--------------+---------------+------+-----+---------+-------+
| Field                 | Type                | Null | Key | Default | Extra |
+--------------+---------------+------+---- -+---------+-------+
| COUNTRY_ID   | varchar(2)       | YES  |         | NULL     |       |
| COUNTRY_NAME | varchar(30) | YES  |         | NULL     |       |
| REGION_ID        | decimal(10,0) | YES  |          | NULL   |       |
+--------------+---------------+------+-----+---------+-------+

c.Write a SQL statement to change the name of the column country_id to con_id, 
keeping the data type and size same.

 alter table new_countries change country_id con_id varchar (2) not null;

mysql> desc new_countries;
+--------------+---------------+------+-----+---------+-------+
| Field          | Type                        | Null         | Key | Default | Extra |
+--------------+---------------+------+-----+---------+-------+
| con_id       | varchar(2)                | NO         |        | NULL    |       |
| COUNTRY_NAME | varchar(30)   | YES        |         | NULL   |       |
| REGION_ID    | decimal(10,0)         | YES      |        | NULL    |       |
+--------------+---------------+------+-----+---------+-------+


3.DML Statement

a.Write a SQL statement to insert a record with your own value into the table countries against each columns.
--> for this question i modify the same name as first. as like countries and country_id.


 insert into countries values (80, 'INDIA', 101), (90, 'CHINA', 102),(99, 'ITALY',103);
mysql> SELECT * FROM COUNTRIES;
+------------+--------------+-----------+
| COUNTRY_ID | COUNTRY_NAME | REGION_ID |
+------------+--------------+-----------+
|      80             | INDIA                   |      101 |
|     90              | CHINA                  |      102 |
|     99              | ITALY                   |      103|



b.Write a SQL statement to insert 5 rows by a single insert statement into jobs table.

insert into jobs values (110,'PROGRAMMER', 30000 , 50000),
                            (120,'ACCOUNTANT', 50000 , 70000),
                            (130,'CLERK', 50000 , 80000),
                             (140,'HR',50000, 70000),(150,'PROFECCER',50000 , 80000);

mysql> SELECT * FROM JOBS;
+--------+------------+------------+------------+
| job_id | job_title  | min_salary | max_salary |
+--------+------------+------------+------------+
|    110 | PROGRAMMER  |     30000 |      50000 |
|    120 | ACCOUNTANT |     50000 |      70000 |
|    103 | CLERK    |     50000|      80000 |
|    140 | HR         |     50000 |      70000 |
|    150 | PROFECCER      |     50000 |      80000 |
+--------+------------+------------+------------+



Here is the sample table jobs.

JOB_ID     | JOB_TITLE                       | MIN_SALARY | MAX_SALARY |
+------------+---------------------------------+------------+------------+
| AD_PRES    | President                       |      20000 |      40000 |
| AD_VP      | Administration Vice President   |      15000 |      30000 |
| AD_ASST    | Administration Assistant        |       3000 |       6000 |
| FI_MGR     | Finance Manager                 |       8200 |      16000 |
| FI_ACCOUNT | Accountant                      |       4200 |       9000 |
| AC_MGR     | Accounting Manager              |       8200 |      16000 |
| AC_ACCOUNT | Public Accountant               |       4200 |       9000 |
| SA_MAN     | Sales Manager                   |      10000 |      20000 |
| SA_REP     | Sales Representative            |       6000 |      12000 |
| PU_MAN     | Purchasing Manager              |       8000 |      15000 |
| PU_CLERK   | Purchasing Clerk                |       2500 |       5500 |
| ST_MAN     | Stock Manager                   |       5500 |       8500 |
| ST_CLERK   | Stock Clerk                     |       2000 |       5000 |
| SH_CLERK   | Shipping Clerk                  |       2500 |       5500 |
| IT_PROG    | Programmer                      |       4000 |      10000 |
| MK_MAN     | Marketing Manager               |       9000 |      15000 |
| MK_REP     | Marketing Representative        |       4000 |       9000 |
| HR_REP     | Human Resources Representative  |       4000 |       9000 |
| PR_REP     | Public Relations Representative |       4500 |      10500 |


c.Write a SQL statement to change Min_salary  to 8000 and max_Salary to 40000 for programmer.

  my table before upadate.
mysql> select *from jobs;


+--------+------------+------------+------------+
| job_id | job_title  | min_salary | max_salary |
+--------+------------+------------+------------+
|    110 | PROGRAMMER  |     30000 |      50000 |
|    120 | ACCOUNTANT |     8000 |      40000 |
|    103 | CLERK    |     40000|      60000 |
|    140 | HR         |     50000 |      70000 |
|    150 | PROFECCER      |     50000 |      80000 |
+--------+------------+------------+------------+


>update jobs set min_salary=8000 where mAX_salary=40000;
-->update jobs set max_salary=40000 where max_salary=60000;



my table after upadate.
mysql> select * from jobs;

+--------+------------+------------+------------+
| job_id | job_title     | min_salary  | max_salary |
+--------+------------+------------+------------+
|    110 | PROGRAMMER  |     30000 |     50000 |
|    120 | ACCOUNTANT  |     8000     |     40000 |
|    103 | CLERK               |     40000|      60000 |
|    140 | HR                     |     50000  |      70000 |
|    150 | PROFECCER      |     50000  |      80000 |
+--------+------------+------------+------------+
